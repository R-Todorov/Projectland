{"version":3,"sources":["aws-config.js","containers/Home.js","components/MyDropdown.js","containers/Profile.js","containers/SearchProjects.js","containers/UserProjects.js","containers/PageNotFound.js","Routes.js","components/RighNav.js","components/NavMenu.js","App.js","serviceWorker.js","index.js"],"names":["aws_config","REGION","USER_POOL_ID","APP_CLIENT_ID","IDENTITY_POOL_ID","BUCKET","URL","myStyles","StyleSheet","create","productInfo","display","width","height","marginTop","padding","backgroundColor","borderRadius","prodTitle","fontSize","marginBottom","learnButt","margin","color",":hover, :active :target","Home","react_default","a","createElement","id","reactstrap_es","className","css","style","textAlign","size","border","tag","Link","to","Component","dropDownStyle","left","fontSizeStyle","colorThemeStyle",":focus, :active","MyDropdown","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","dropdownOpen","names","user","name","surname","toggle","bind","assertThisInitialized","setState","alert","username","isOpen","caret","right","header","divider","onClick","logout","React","formDiv","submitButt","inputStyle","Profile","fetchUserDetails","params","src","alt","type","for","disabled","placeholder","bsSize","buttons",":hover, :active","mainDiv","optionsDiv","PageNotFound","Routes","Switch","Route","path","exact","component","SearchProjects","UserProjects","authButtons3D","position","cursor","textDecoration","boxShadow","outline",":active","transform","blueBackground","USER_POOL_DATA","UserPoolId","awsConfig","ClientId","userPool","AmazonCognitoIdentity","AWS","config","region","credentials","CognitoIdentityCredentials","IdentityPoolId","Logins","accounts.google.com","graph.facebook.com","www.amazon.com","RightNav","loggedIn","refreshWindow","signIn","signOut","checkSessionValidity","establishSession","formUserObject","Hub","listen","handleSignIn","then","window","location","reload","Auth","capsule","payload","event","getCurrentUser","valid","getSession","err","session","isValid","console","log","_this2","currentAuthenticatedUser","data","catch","attrs","attributes","given_name","family_name","justified","MyDropdown_MyDropdown","signUp","linkStyle","verticalAlign",":link, :visited",":hover, :focus","navBarStyle","NavMenu","logged","newProp","blueProp","expand","href","pills","horizontal","RighNav_RightNav","Amplify","configure","userPoolId","identityPoolId","userPoolWebClientId","oauth","domain","scope","redirectSignIn","redirectSignOut","responseType","Storage","bucket","API","endpoints","endpoint","App","initial","NavMenu_NavMenu","OAuthSignIn","withOAuth","Boolean","hostname","match","ReactDOM","render","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6d65a2f2.chunk.js","sourcesContent":["//JSON configuration description of the Amazon Cognito, S3 and API Gateway resources\r\nexport default {\r\n  cognito: {\r\n    REGION: 'eu-west-2',\r\n    USER_POOL_ID: 'eu-west-2_CQvHMh1AX',\r\n    APP_CLIENT_ID: '228uq4urbevfa4jmgm6an45pl0',\r\n    IDENTITY_POOL_ID: 'eu-west-2:b4750d8f-920f-4787-8ab2-30d9306e518f'\r\n  }, \r\n  s3: {\r\n    REGION: 'eu-west-2',\r\n    BUCKET: 'www.projectland'\r\n  },\r\n  apiGateway: {\r\n    REGION: 'eu-west-2',\r\n    URL: 'https://of6mw3disk.execute-api.eu-west-2.amazonaws.com/prod'\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\nimport {Jumbotron, Button} from 'reactstrap';\nimport { StyleSheet, css } from 'aphrodite';\nimport { Link } from 'react-router-dom';\nimport \"./Home.css\";\n\n\nconst myStyles = StyleSheet.create({\n\n  productInfo: {\n    display: 'inline-block',\n    width: '700px',\n    height: '600px',\n    marginTop: '20px',\n    padding: '40px',\n    backgroundColor: '#E4E8E8',\n    borderRadius: '10px'\n  },\n\n  prodTitle: {\n    fontSize: '50px',\n    marginBottom: '30px'\n  },\n\n  learnButt: {\n    fontSize: '20px',\n    margin: '20px',\n    padding: '10px 40px',\n    color: 'white',\n    backgroundColor: \"#007bff\",\n    borderRadius: '5px',\n\n    ':hover, :active :target': {\n      backgroundColor: '#0066CC', \n    }\n  }\n});  \n\nexport default class Home extends Component {\n  render() {\n    return (\n      <div id=\"home-container\">\n        <Jumbotron className={css(myStyles.productInfo)}>\n          <h1 className={css(myStyles.prodTitle)}>Greetings from Projectland!</h1>\n          <p style={{textAlign: 'justify'}}>Projectland is a proprietary software which is developed with the sole intent of providing employees with an\n             effortless and easy-to-use project management platform. The sign up process is almost instant. Moreover, the process\n             could be shortened by allowing users to authenticate themselves with popular third-party providers. Having all personal\n             data and project details stored securely, but easily retrievable, cowerkers can start focusing on doing rather than managing.\n          </p>\n          <hr style={{size: '1px', backgroundColor:'black', border: '1px solid black'}}/>\n          <p>Although we into early development of the tool, we have a lot of upcoming features planned</p>\n          <p className=\"lead\">\n            <Button tag={Link} to=\"/about\" className={css(myStyles.learnButt)}>Learn more</Button>\n          </p>\n        </Jumbotron>\n      </div>\n    );\n  }\n}","import React from 'react';\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport { StyleSheet, css } from 'aphrodite';\nimport { Link } from 'react-router-dom';\n\nconst style = StyleSheet.create({\n\n  dropDownStyle: {\n    left: '490px',\n    color: '#000',\n  },\n\n  fontSizeStyle: {\n    fontSize: '15px',\n  },\n\n  colorThemeStyle: {\n    color: '#000',\n    backgroundColor: '#FFF',\n    \n    ':focus, :active': {\n      color: '#000',\n    }\n  }\n});\n\nexport default class MyDropdown extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      dropdownOpen: false,\n      names: this.props.user.name + \" \" + this.props.user.surname\n    };\n\n    this.toggle = this.toggle.bind(this);\n  }\n\n  toggle() {\n    this.setState({\n      dropdownOpen: !this.state.dropdownOpen\n    });\n  }\n\n  //Renders a customised reactstrap dropdown menu\n  render() {\n    alert(\"USER \" + this.props.user.username);\n    return (\t\n      <Dropdown className={css(style.dropDownStyle)} isOpen={this.state.dropdownOpen} toggle={this.toggle} size=\"lg\">\n        <DropdownToggle caret className={css(style.fontSizeStyle, style.colorThemeStyle)}>\n          Welcome, <strong className={css(style.fontSizeStyle, style.colorThemeStyle)}>{this.state.names+ \" \"}</strong>\n        </DropdownToggle>\n        <DropdownMenu right className={css(style.fontSizeStyle, style.colorThemeStyle)}>\n          <DropdownItem header className={css(style.fontSizeStyle)}>Profile</DropdownItem>\n          <DropdownItem divider /> \n          <DropdownItem tag={Link} to={\"/profile/\" + this.props.user.username} className={css(style.fontSizeStyle, style.colorThemeStyle)}>My Profile</DropdownItem>\n          <DropdownItem tag={Link} to=\"/my_projects\" className={css(style.fontSizeStyle, style.colorThemeStyle)}>My Projects</DropdownItem>\n          <DropdownItem divider />           \n          <DropdownItem className={css(style.fontSizeStyle, style.colorThemeStyle)}>Settings</DropdownItem>\n          <DropdownItem divider />\n          <DropdownItem onClick={this.props.logout}>Log out</DropdownItem>\n        </DropdownMenu>\n      </Dropdown>  \n    );\n  } \n}   \n\n","import React, { Component } from \"react\";\nimport { Form, FormGroup, Label, Input, Button } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { StyleSheet, css } from 'aphrodite';\nimport { API } from \"aws-amplify\";\nimport NavMenu from '../components/NavMenu.js';\nimport MyDropdown from '../components/MyDropdown.js';\n\n\nconst myStyles = StyleSheet.create({\n\n  formDiv: {\n    width: '20%',\n    margin: '20px auto',\n    padding: '20px',\n    backgroundColor: '#E4E8E8',\n    borderRadius: '10px',\n    fontSize: '17px',\n  },\n\n  submitButt: {\n    marginTop: '15px',\n    padding: '5px 0px',\n    width: '265px',\n    height: '40px',\n    fontSize: '20px',\n    color: 'white',\n    backgroundColor: \"#007bff\",\n    borderRadius: '5px',\n\n    ':hover, :active :target': {\n      backgroundColor: '#0066CC', \n    }\n  },\n\n  inputStyle: {\n    fontSize: '12px',\n    height: '20px'  \n  }\n});\n\nconst inputStyle = {\n  fontSize: '15px',\n  height: '30px' \n}\n\nexport default class Profile extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.fetchUserDetails = this.fetchUserDetails.bind(this)\n  }\n    \n  render() {\n    return (\n      <div style={{textAlign: 'left'}}>\n        <div className={css(myStyles.formDiv)}>\n          <Form>\n            <FormGroup>\n              <h1>{this.props.params.username}</h1>\n              <img style={{margin: '0px auto 10px auto', padding: '5px', border: '1px black solid'}} src=\"https://s3.eu-west-2.amazonaws.com/www.projectland/avatar.png\" alt=\"avatar placeholder\" width=\"104\" height=\"100\"/>\n              <Input type=\"file\" name=\"file\" id=\"exampleFile\"/>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"username\">Username</Label>\n              <Input type=\"text\" name=\"username\" id=\"usernames\" style={inputStyle}/>\n            </FormGroup>\n            <FormGroup disabled>\n              <Label for=\"name\">Name</Label>\n              <Input type=\"text\" name=\"name\" id=\"name\" style={inputStyle}/>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"surname\">Surname</Label>\n              <Input type=\"text\" name=\"surname\" id=\"surname\" style={inputStyle}/>\n            </FormGroup>\n            <FormGroup disabled>\n              <Label for=\"role\">Current role</Label>\n              <Input type=\"text\" name=\"role\" id=\"role\" style={inputStyle}/>\n            </FormGroup>\n            <FormGroup >\n              <Label for=\"email\">Email</Label>\n              <Input type=\"email\" name=\"email\" id=\"email\" style={inputStyle}/>\n            </FormGroup>\n            <FormGroup >\n              <Label for=\"phone\">Phone number</Label>\n              <Input type=\"text\" name=\"phone\" id=\"phone\" placeholder=\"Enter phone number\" style={inputStyle}/>\n            </FormGroup>\n            <FormGroup >\n            <Label for=\"gender\">Gender</Label>\n              <Input type=\"select\" name=\"email\" id=\"email\" style={inputStyle}>\n                <option>Please specify</option>\n                <option>Male</option>\n                <option>Female</option>\n                <option>Other</option>\n                <option>Prefer not to say</option>\n              </Input>\n            </FormGroup>\n            <FormGroup disabled >\n              <Label for=\"joinDate\">Join date</Label>\n              <Input type=\"joinDate\" name=\"joinDate\" id=\"joinDate\" style={inputStyle}/>\n            </FormGroup>\n            <Button className={css(myStyles.submitButt)} type=\"submit\" name=\"submit\" bsSize=\"large\">Update details</Button>\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}","import React, { Component } from \"react\";\n\nexport default class Home extends Component {\n  render() {\n    return (\n      <div>\n      </div>\n    );\n  }\n}","import React, { Component } from \"react\";\nimport {Button} from 'reactstrap';\nimport { StyleSheet, css } from 'aphrodite';\n\nconst style = StyleSheet.create({\n\n    buttons: {\n      fontSize: '15px',\n      margin: '20px',\n      backgroundColor: \"#007bff\",\n\n      ':hover, :active': {\n        backgroundColor: '#0066CC', \n      }\n    },\n\n    mainDiv: {\n      textAlign: 'center',\n      backgroundColor: 'white'\n    },\n\n    optionsDiv: {\n      display: 'inline-block',\n      marginTop: '150px',\n      backgroundColor: 'white'\n    }  \n\n})\n\nexport default class Home extends Component {\n  render() {\n    return (\n      <div className={css(style.mainDiv)}>\n        <div className={css(style.optionsDiv)}>\n          <h1>You aren't contributing to any projects  currently</h1>\n          <Button className={css(style.buttons)} color=\"primary\">Create a new project</Button>\n          <Button className={css(style.buttons)} color=\"primary\">Join an existing project</Button>\n        </div>  \n      </div>\n    );\n  }\n}","import React from \"react\";\n\nexport default class PageNotFound extends React.Component {\n\n  render() {\n\n    return (\n      <div style={{textAlign: 'center', marginTop: '150px'}}>\n        <h1>Sorry, this page <strong>does not </strong>exist in the Projectland domain!</h1>\n      </div>\n    );\n  }\n} ","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport App from './App.js';\r\nimport Home from './containers/Home.js';\r\nimport Profile from './containers/Profile.js';\r\nimport SearchProjects from './containers/SearchProjects.js';\r\nimport UserProjects from './containers/UserProjects.js';\r\nimport PageNotFound from './containers/PageNotFound.js';\r\n\r\n//Serve internal page requests via React router\r\nexport default () =>\r\n  <Switch>\r\n    <Route path=\"/\" exact component={Home} />\r\n    <Route path=\"/search_projects\" exact component={SearchProjects} />\r\n    <Route path=\"/profile/:username\" exact component={Profile} />\r\n    <Route path=\"/my_projects\" exact component={UserProjects} />\r\n    <Route component={PageNotFound} />\r\n  </Switch>;\r\n","import React from 'react';\r\nimport { Nav, Button} from 'reactstrap';\r\nimport { StyleSheet, css } from 'aphrodite';\r\nimport { Link } from 'react-router-dom';\r\nimport AWS from 'aws-sdk';\r\nimport Amplify, { Auth, Hub } from 'aws-amplify'; \r\nimport awsConfig from '../aws-config';\r\nimport * as AmazonCognitoIdentity from 'amazon-cognito-identity-js';\r\nimport MyDropdown from './MyDropdown.js'\r\n\r\nconst myStyles = StyleSheet.create({\r\n\r\n    authButtons3D: {\r\n        position: 'relative',\r\n        display: 'inline-block',\r\n        left: '515px',\r\n        width: '80px',\r\n        height: '30px',\r\n        margin: '10px',\r\n        cursor: 'pointer',\r\n        color: 'white',\r\n        border: 'none',\r\n        borderRadius: '10px',\r\n        textDecoration: 'none',\r\n        backgroundColor: '#1E90FF',\r\n        boxShadow: '0 7px #BBB',\r\n        outline: '0',\r\n        fontSize: '15px',\r\n    \r\n        ':active': {\r\n          backgroundColor: '#0066CC', \r\n          boxShadow: '0 4px #999', \r\n          transform: 'translateY(4px)'\r\n        },\r\n      },\r\n\r\n      blueBackground: {\r\n        backgroundColor: 'red'\r\n      }\r\n})\r\n\r\nconst USER_POOL_DATA = {\r\n  UserPoolId: awsConfig.cognito.USER_POOL_ID,\r\n  ClientId: awsConfig.cognito.APP_CLIENT_ID\r\n};\r\n\r\nvar userPool = new AmazonCognitoIdentity.CognitoUserPool(USER_POOL_DATA); \r\n\r\nAWS.config.region = awsConfig.cognito.REGION;\r\n\r\n//AWS configuration for token retrieval and token exchange\r\nAWS.config.credentials = new AWS.CognitoIdentityCredentials({\r\n  IdentityPoolId: awsConfig.cognito.IDENTITY_POOL_ID,\r\n  Logins: {\r\n    'accounts.google.com': 'GOOGLETOKEN',\r\n    'graph.facebook.com': 'FBTOKEN',\r\n    'www.amazon.com': 'AMAZONTOKEN',\r\n  }\r\n});\r\n\r\n//Determines whether to render the sign in and sign up buttons or\r\n//display a dropdown for managing a user's profile\r\nexport default class RightNav extends React.Component {\r\n    \r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      loggedIn: false,\r\n      refreshWindow: false\r\n    }\r\n\r\n    this.signIn = this.signIn.bind(this);\r\n    this.signOut = this.signOut.bind(this);\r\n    this.checkSessionValidity = this.checkSessionValidity.bind(this);\r\n    this.establishSession = this.establishSession.bind(this);\r\n    this.formUserObject = this.formUserObject.bind(this);\r\n    Hub.listen('auth', this, 'AuthListener');\r\n  }\r\n\r\n  signIn() {\r\n    this.props.handleSignIn().then(window.location.reload);\r\n  }\r\n\r\n  signUp() {\r\n    window.location  = 'https://auth.projectland.ga/signup?response_type=code'\r\n                       +'&client_id=228uq4urbevfa4jmgm6an45pl0'\r\n                       +'&redirect_uri=https://www.projectland.ga';\r\n  }\r\n\r\n  //Load Cognito signup page\r\n  signOut() {\r\n    Auth.signOut();\r\n    this.setState({loggedIn: false});\r\n  }\r\n\r\n  onHubCapsule(capsule) {\r\n\r\n    switch (capsule.payload.event) {\r\n    \r\n      case 'signIn':\r\n          window.location.reload()\r\n          break;\r\n      case 'signOut':\r\n          break;\r\n      default:  \r\n    } \r\n  }\r\n\r\n  //Trigger a session validation function\r\n  componentWillMount() {\r\n    this.checkSessionValidity(); \r\n  }\r\n\r\n  //Establishes a new user session if a user has signed in successfully\r\n  checkSessionValidity() { \r\n\r\n    let user = userPool.getCurrentUser();\r\n    let valid = false;\r\n\r\n    if (user != null) {\r\n      user.getSession(function(err, session) {\r\n        if (err) {\r\n          alert(err);\r\n          return;\r\n        }\r\n        valid = session.isValid();\r\n        console.log(\"Session validity \" + valid);\r\n      });\r\n    }\r\n\r\n    if (valid) this.establishSession();\r\n  } \r\n\r\n  establishSession() {\r\n    Auth.currentAuthenticatedUser()\r\n    .then(data => {\r\n        console.log(data);\r\n        this.formUserObject(data);\r\n      })\r\n    .catch(err => {\r\n        console.log(err);\r\n    });\r\n  }\r\n\r\n  //Form a user object after a successfull login\r\n  formUserObject(data) {\r\n    let attrs = data.attributes;\r\n\r\n    this.setState({\r\n      loggedIn: true,\r\n      user: {\r\n        username: data.username,\r\n        name: attrs.given_name,\r\n        surname: attrs.family_name,\r\n        attrs: attrs\r\n      }\r\n    });\r\n  }\r\n\r\n  //Conditionally render a Nav component with two authentication buttons\r\n  //or a dropdown menu depending on whether the user is logged in\r\n  render () {\r\n    let rightNav;\r\n    if (!this.state.loggedIn) {\r\n      rightNav =\r\n      <Nav justified>\r\n        <Button className={css(myStyles.authButtons3D)} onClick={this.signIn}>Sign in</Button>\r\n        <Button className={css(myStyles.authButtons3D)} onClick={this.signUp}>Sign up</Button>\r\n      </Nav>;\r\n    }\r\n    else {\r\n\r\n      rightNav = <Nav justified>\r\n                   <MyDropdown user={this.state.user} logout={this.signOut} /> \r\n                 </Nav>\r\n    }\r\n      return rightNav;\r\n  }    \r\n}","import React from 'react';\nimport { Navbar, NavbarToggler, NavbarBrand, Nav, NavItem } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport Routes from '../Routes.js';\nimport { StyleSheet, css } from 'aphrodite';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport RightNav from './RighNav.js'\nimport './NavMenu.css';\n\n//CSS styles for customising existing reactstrap components\nconst myStyles = StyleSheet.create({\n\n  linkStyle: {\n    display: 'inline-block',\n    verticalAlign: 'center',\n    width: '150px',\n    textDecoration: 'none',\n    color: '#007BFF',\n    fontSize: '15px',\n\n    ':link, :visited': {\n      backgroundColor: '#343A40', \n    },\n\n    ':hover, :focus': {\n      backgroundColor: '#FFF', \n    },\n\n    ':active':{\n      color: '#1E90FF'\n    }\n  },\n\n  navBarStyle: {\n    height: '80px',\n    verticalAlign: 'baseline',\n    borderRadius: '0'\n  }\n});  \n\n//A custom react component representing a navigation menu \nexport default class NavMenu extends React.Component {\n  \n  constructor(props) {\n    super(props);\n\n    this.state = {\n      logged: false\n    }\n  }\n\n\n  componentWillMount() {\n    this.setState({\n      newProp: 20,\n      blueProp: 30\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <Navbar className={css(myStyles.navBarStyle)} color=\"dark\" expand=\"xl\">\n          <NavbarBrand href=\"/\">\n            <Link to=\"/\">\n              <img id=\"logo\" src=\"./projectland_logo.png\" alt=\"Projectland logo\" width=\"70\" height=\"70\"/>\n            </Link>\n          </NavbarBrand>\n          <NavbarToggler onClick={this.toggle} />\n          <Nav justified pills horizontal=\"true\"> \n            <NavItem>\n              <Link to=\"/\" className={css(myStyles.linkStyle)}>Home</Link>\n            </NavItem>\n            <NavItem>\n               <Link to=\"/search_projects\" className={css(myStyles.linkStyle)}>Browse Projects</Link>\n            </NavItem>\n            <NavItem>\n              <Link to=\"/search_users\" className={css(myStyles.linkStyle)}>Search Users</Link>\n            </NavItem>\n            <NavItem>\n              <Link to=\"/about\" className={css(myStyles.linkStyle)}>About</Link>\n            </NavItem>\n          </Nav>\n          <RightNav handleSignIn={this.props.handleSignIn} />         \n        </Navbar>\n        <Routes />\n      </div>\n    );\n  } \n}\n\n\n","import React, { Component } from 'react';\nimport awsConfig from './aws-config';\nimport AWS from 'aws-sdk';\nimport Amplify from 'aws-amplify';\nimport { withOAuth } from 'aws-amplify-react';\nimport './App.css';\nimport NavMenu from './components/NavMenu.js';\n\n//OAuth configuration necessary for initiating \n//the user authentication process\nconst OAuth = {\n    domain : 'auth.projectland.ga', \n    scope : ['phone', 'email', 'profile', 'openid','aws.cognito.signin.user.admin'], \n    redirectSignIn :'https://www.projectland.ga', \n    redirectSignOut : 'https://www.projectland.ga',\n    responseType: 'code'\n};\n\n//Amplify service configuration\nAmplify.configure({\n\n  Auth: {\n    region: awsConfig.cognito.REGION,\n    userPoolId: awsConfig.cognito.USER_POOL_ID,\n    identityPoolId: awsConfig.cognito.IDENTITY_POOL_ID,\n    userPoolWebClientId: awsConfig.cognito.APP_CLIENT_ID,\n    oauth: OAuth\n  },\n\n  Storage: {\n    region: awsConfig.s3.REGION,\n    bucket: awsConfig.s3.BUCKET,\n    identityPoolId: awsConfig.cognito.IDENTITY_POOL_ID\n  },\n\n  API: {\n  \tendpoints: [ \n  \t  {\n        name: 'users', //API name\n        endpoint: awsConfig.apiGateway.URL,\n        region: awsConfig.apiGateway.REGION\n      },\n    ]\n  }\n});\n\n//Entry point of the SPA\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {initial: 0};\n  }\n\n  render() {\n    return (\n      <div style={{textAlign: 'center'}}>\n        <NavMenu handleSignIn={this.props.OAuthSignIn} />\n     </div>\n    );\n  }  \n}\n\nexport default withOAuth(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\n\n// Render the App component which contains all custom-made and reactstrap provided components\n// and display it in the browser. The same component is enclosed in a Router tag which is used\n// to serve requests for displaying different sections of the application.\nReactDOM.render(\n  <Router>\n  \t<App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}